{"ast":null,"code":"var _jsxFileName = \"/Users/chaewon/Desktop/likelion/11th-Session-Front/homework/230627/src/components/Book.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { styled } from \"styled-components\";\n// Data\nimport { bookCover } from \"../_mock/bookData\";\n// images\nimport likeIcon from \"../images/likeIcon.svg\";\nimport flikeIcon from \"../images/fLikeIcon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Book = props => {\n  _s();\n  // book 정보와, myPage 여부 정보를 props로 받아옴\n  const {\n    book,\n    isMyList\n  } = props;\n  const [likedList, setLikedList] = useState([\"\"]);\n  // userID 값을 localStorage에서 받아와서, 로그인 여부 저장\n  const isLogin = localStorage.getItem(\"userID\");\n  const navigate = useNavigate();\n\n  // 새로고침시 localStorage에 저장되어있는 좋아요 목록을 받아서 likedList state에 넣기\n  useEffect(() => {\n    JSON.parse(localStorage.getItem(\"likedList\")) ? setLikedList(JSON.parse(localStorage.getItem(\"likedList\"))) : setLikedList([\"\"]);\n  }, []);\n\n  // 좋아요 눌러서 book id를 저장하기\n  const saveLike = e => {\n    if (isLogin) {\n      let updatedLikedList = [];\n      if (localStorage.getItem(\"likedList\")) {\n        updatedLikedList = JSON.parse(localStorage.getItem(\"likedList\"));\n      }\n      updatedLikedList = [...updatedLikedList, e.target.id];\n      localStorage.setItem(\"likedList\", JSON.stringify(updatedLikedList));\n      setLikedList(updatedLikedList);\n    } else {\n      navigate(\"/login\");\n    }\n  };\n  // 좋아요 취소해서 book id 삭제하기\n  const deleteLike = e => {\n    if (isLogin) {\n      const updatedLikedList = likedList.filter(item => item !== e.target.id);\n      localStorage.setItem(\"likedList\", JSON.stringify(updatedLikedList));\n      setLikedList(updatedLikedList);\n    } else {\n      navigate(\"/login\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isMyList ? /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(BookCover, {\n        data: bookCover[book.id - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TitleWrapper, {\n        children: [book.name, likedList.indexOf(String(book.id)) !== -1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n          id: book.id,\n          src: flikeIcon,\n          onClick: deleteLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          id: book.id,\n          src: likeIcon,\n          onClick: saveLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : likedList.indexOf(String(book.id)) !== -1 ? /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(BookCover, {\n        data: bookCover[book.id - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TitleWrapper, {\n        children: [book.name, /*#__PURE__*/_jsxDEV(\"img\", {\n          id: book.id,\n          src: flikeIcon,\n          onClick: deleteLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n_s(Book, \"DjNIV+EufEWQDjRIrLVAaln9Dz8=\", false, function () {\n  return [useNavigate];\n});\n_c = Book;\nexport default Book;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: #6b6c6d;\n  font-weight: 600;\n`;\n_c2 = Wrapper;\nconst BookCover = styled.div`\n  width: 150px;\n  height: 220px;\n  background-image: url(${props => props.data});\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n_c3 = BookCover;\nconst TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 15px 0;\n  img {\n    width: 30px;\n    height: 30px;\n  }\n`;\n_c4 = TitleWrapper;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Book\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"BookCover\");\n$RefreshReg$(_c4, \"TitleWrapper\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","styled","bookCover","likeIcon","flikeIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Book","props","_s","book","isMyList","likedList","setLikedList","isLogin","localStorage","getItem","navigate","JSON","parse","saveLike","e","updatedLikedList","target","id","setItem","stringify","deleteLike","filter","item","children","Wrapper","BookCover","data","fileName","_jsxFileName","lineNumber","columnNumber","TitleWrapper","name","indexOf","String","src","onClick","_c","div","_c2","_c3","_c4","$RefreshReg$"],"sources":["/Users/chaewon/Desktop/likelion/11th-Session-Front/homework/230627/src/components/Book.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { styled } from \"styled-components\";\n// Data\nimport { bookCover } from \"../_mock/bookData\";\n// images\nimport likeIcon from \"../images/likeIcon.svg\";\nimport flikeIcon from \"../images/fLikeIcon.svg\";\n\nconst Book = (props) => {\n  // book 정보와, myPage 여부 정보를 props로 받아옴\n  const { book, isMyList } = props;\n  const [likedList, setLikedList] = useState([\"\"]);\n  // userID 값을 localStorage에서 받아와서, 로그인 여부 저장\n  const isLogin = localStorage.getItem(\"userID\");\n\n  const navigate = useNavigate();\n\n  // 새로고침시 localStorage에 저장되어있는 좋아요 목록을 받아서 likedList state에 넣기\n  useEffect(() => {\n    JSON.parse(localStorage.getItem(\"likedList\"))\n      ? setLikedList(JSON.parse(localStorage.getItem(\"likedList\")))\n      : setLikedList([\"\"]);\n  }, []);\n\n  // 좋아요 눌러서 book id를 저장하기\n  const saveLike = (e) => {\n    if (isLogin) {\n      let updatedLikedList = [];\n      if (localStorage.getItem(\"likedList\")) {\n        updatedLikedList = JSON.parse(localStorage.getItem(\"likedList\"));\n      }\n      updatedLikedList = [...updatedLikedList, e.target.id];\n      localStorage.setItem(\"likedList\", JSON.stringify(updatedLikedList));\n      setLikedList(updatedLikedList);\n    } else {\n      navigate(\"/login\");\n    }\n  };\n  // 좋아요 취소해서 book id 삭제하기\n  const deleteLike = (e) => {\n    if (isLogin) {\n      const updatedLikedList = likedList.filter((item) => item !== e.target.id);\n      localStorage.setItem(\"likedList\", JSON.stringify(updatedLikedList));\n      setLikedList(updatedLikedList);\n    } else {\n      navigate(\"/login\");\n    }\n  };\n  return (\n    <>\n      {/* Book 컴포넌트는 categoryPage, MyPage 두 곳에서 사용하므로, \n      isMyList를 받아서 myPage에서 사용하는 경우 likedList에 저장된 책만 보여줌*/}\n      {!isMyList ? (\n        <Wrapper>\n          <BookCover data={bookCover[book.id - 1]} />\n          <TitleWrapper>\n            {book.name}\n            {likedList.indexOf(String(book.id)) !== -1 ? (\n              <img id={book.id} src={flikeIcon} onClick={deleteLike} />\n            ) : (\n              <img id={book.id} src={likeIcon} onClick={saveLike} />\n            )}\n          </TitleWrapper>\n        </Wrapper>\n      ) : likedList.indexOf(String(book.id)) !== -1 ? (\n        <Wrapper>\n          <BookCover data={bookCover[book.id - 1]} />\n          <TitleWrapper>\n            {book.name}\n            <img id={book.id} src={flikeIcon} onClick={deleteLike} />\n          </TitleWrapper>\n        </Wrapper>\n      ) : null}\n    </>\n  );\n};\n\nexport default Book;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: #6b6c6d;\n  font-weight: 600;\n`;\n\nconst BookCover = styled.div`\n  width: 150px;\n  height: 220px;\n  background-image: url(${(props) => props.data});\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\nconst TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 15px 0;\n  img {\n    width: 30px;\n    height: 30px;\n  }\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}